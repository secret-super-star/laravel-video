<?php

namespace App\Helpers;

use radzserg\BoxContent\BoxContentException;
use radzserg\BoxContent\Client as BoxClient;
 
class Common
{
	public static function getClientIP()
	{
		if (getenv('HTTP_CLIENT_IP'))
			$ip = getenv('HTTP_CLIENT_IP');
		else if (getenv('HTTP_X_FORWARDED_FOR'))
			$ip = getenv('HTTP_X_FORWARDED_FOR');
		else if (getenv('HTTP_X_FORWARDED'))
			$ip = getenv('HTTP_X_FORWARDED');
		else if (getenv('HTTP_FORWARDED_FOR'))
			$ip = getenv('HTTP_FORWARDED_FOR');
		else if (getenv('HTTP_FORWARDED'))
			$ip = getenv('HTTP_FORWARDED');
		else if (getenv('REMOTE_ADDR'))
			$ip = getenv('REMOTE_ADDR');
		else
			$ip = '0.0.0.0';

		$tmp = explode(',', $ip);
		
		return $tmp[0];
	}
	
	public static function cURL($url, $referer = false, $data = false, $header = false, $command = false)
	{
		$ch = curl_init();
		
		$ck = storage_path('app/ck.txt');
		
		$opts = array(
			CURLOPT_URL => $url,
			CURLOPT_SSL_VERIFYPEER => FALSE,
			CURLOPT_SSL_VERIFYHOST => FALSE,
			CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4,
			CURLOPT_FOLLOWLOCATION => TRUE,
			CURLOPT_RETURNTRANSFER => TRUE,
			// CURLOPT_FRESH_CONNECT => TRUE,
			// CURLOPT_FORBID_REUSE => TRUE,
			CURLOPT_TIMEOUT => 3600,
			CURLOPT_COOKIEJAR => $ck,
			CURLOPT_COOKIEFILE => $ck,
			CURLOPT_ENCODING => 'gzip, deflate',
			CURLOPT_USERAGENT => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0',
			);

		if ($data)
		{
			$opts[CURLOPT_POST] = true;
			$opts[CURLOPT_POSTFIELDS] = $data;
		}

		if ($referer)
		{
			$opts[CURLOPT_REFERER] = $referer;
		}

		if ($header)
		{
			$opts[CURLOPT_HTTPHEADER] = $header;
		}
		
		if ($command)
		{
			$opts[CURLOPT_CUSTOMREQUEST] = $command;
		}

		curl_setopt_array($ch, $opts);
		$result = curl_exec($ch);
		
		// if ($result == false) {
			// logger(curl_error($ch));
		// }
		
		curl_close ($ch);
		return $result;
	}
	
	public static function getRedirect($url)
	{
		$ch = curl_init();

		$opts = array(
			CURLOPT_URL => $url,
			CURLOPT_SSL_VERIFYPEER => FALSE,
			CURLOPT_SSL_VERIFYHOST => FALSE,
			CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4,
			CURLOPT_FOLLOWLOCATION => TRUE,
			CURLOPT_NOBODY => TRUE,
			CURLOPT_CUSTOMREQUEST => 'HEAD',
			CURLOPT_TIMEOUT => 5,
			CURLOPT_ENCODING => 'gzip, deflate',
			CURLOPT_USERAGENT => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0',
			);
			
		curl_setopt_array($ch, $opts);
		curl_exec($ch);
		
		$result = curl_getinfo($ch, CURLINFO_EFFECTIVE_URL);
		
		curl_close($ch);
		return $result;
	}
	
	public static function cURLFembed($v)
	{
		$ch = curl_init();

		$opts = array(
			CURLOPT_URL => 'https://www.fembed.com/api/source/' . $v,
			CURLOPT_FOLLOWLOCATION => TRUE,
			CURLOPT_RETURNTRANSFER => TRUE,
			CURLOPT_SSL_VERIFYPEER => FALSE,
			CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4,
			CURLOPT_SSL_VERIFYHOST => FALSE,
			CURLOPT_ENCODING => 'gzip, deflate',
			CURLOPT_USERAGENT => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0',
			CURLOPT_REFERER => 'https://www.fembed.com/v/' . $v,
			CURLOPT_POST => TRUE,
			CURLOPT_POSTFIELDS => http_build_query(['d' => 'www.fembed.com', 'r' => '']),
			);

		$opts[CURLOPT_HTTPHEADER] = array(
			'Content-Type: application/x-www-form-urlencoded; charset=UTF-8',
			'X-Requested-With: XMLHttpRequest'
			);

		curl_setopt_array($ch, $opts);
		$result = curl_exec($ch);
		curl_close($ch);
		return $result;
	}

	public static function getRedirectURL($url)
	{
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_HEADER, TRUE);
		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
		curl_setopt($ch, CURLOPT_NOBODY, TRUE);
		curl_setopt($ch, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);

		curl_exec($ch);

		$rurl = curl_getinfo($ch, CURLINFO_EFFECTIVE_URL);

		curl_close($ch);

		return $rurl;
	}
	
	public static function getBoxToken()
	{
		try {
			$client = new BoxClient([
				'publicKeyId' => 'b6x5zqoz',  // Public Key ID generated by Box and provided upon submission of a Public Key. Identifies which Public Key a client is using.
				'enterpriseId' => '38806894', // enterprise_id for a token specific to an enterprise
				'boxUserId' => '3282928551',  // app user_id for a token specific to an individual app user. https://docs.box.com/docs/app-users#section-2-create-an-app-user
				'privateCertPath' => storage_path('app/pk.pem'),    // path to your private cert
				'certPassword' => '817be805aaea697bd949e0358dde8dc2',
				'clientId' => 'npq7r6gfbcvuudeq63g79zz04qfscia3',      // app client id
				'secretId' => 'YnIFSv5dkw7O3FjIJaC39fsep5ov1hlz',      // app secret id
				// next fields are optional

				// specify cache files in order not to sign every requets but save them to cache files
				// tokens will be automatically refreshed when they expire
				'appTokenCachePath' => storage_path('app/boxcom_app_token.json'),    // path to file where app token will be saved
				'userTokenCachePath' => storage_path('app/boxcom_user_token.json'),  // path to file where user token will be saved
			]);
			
			return $client->token->getAccessToken('user');
		} catch (BoxContentException $e) {
			dd($e->getMessage());
			return false;
		}
	}
}